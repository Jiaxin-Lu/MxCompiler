
func qpow $a $p $mod {
%qpow_entry:
    $t = move 1
    $y = move $a
    $p_2 = move $p
    $t_2 = move $t
    $y_2 = move $y
    $_fresh_variable_ = move $p_2
    $p_2 = move $p_2
    $_fresh_variable_ = move $t_2
    $t_2 = move $t_2
    $_fresh_variable_ = move $y_2
    jump %qpow__while_cond
%qpow__while_cond:
    $_virtual_register = sgt $p_2 0
    br $_virtual_register %qpow__while_body %qpow__while_merge
%qpow__while_body:
    $_virtual_register_2 = and $p_2 1
    $_virtual_register_3 = seq $_virtual_register_2 1
    br $_virtual_register_3 %qpow__if_then %qpow__parallel_copy_
%qpow__if_then:
    $_virtual_register_4 = mul $t_2 $y_2
    $_virtual_register_5 = mod $_virtual_register_4 $mod
    $t_3 = move $_virtual_register_5
    $t_4 = move $t_3
    $_fresh_variable__2 = move $t_4
    jump %qpow__if_merge
%qpow__if_merge:
    $_virtual_register_6 = mul $y_2 $y_2
    $_virtual_register_7 = mod $_virtual_register_6 $mod
    $y_3 = move $_virtual_register_7
    $_virtual_register_8 = div $p_2 2
    $p_3 = move $_virtual_register_8
    $p_2 = move $p_3
    $t_2 = move $t_4
    $y_2 = move $y_3
    $_fresh_variable__3 = move $p_2
    $p_2 = move $p_2
    $_fresh_variable__3 = move $t_2
    $t_2 = move $t_2
    $_fresh_variable__3 = move $y_2
    jump %qpow__while_cond
%qpow__parallel_copy_:
    $t_4 = move $t_2
    $_fresh_variable__4 = move $t_4
    jump %qpow__if_merge
%qpow__while_merge:
    ret $t_2
}

func main {
%main_entry:
    $_virtual_register_9 = call qpow 2 10 10000 
    $_virtual_register_10 = call toString $_virtual_register_9 
    call println $_virtual_register_10 
    ret 0
}

func _init_ {
%_init__entry:
    $_virtual_register_11 = call main 
    ret $_virtual_register_11
}

