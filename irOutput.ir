@n
@r
@c
@i
@j

func abs $c {
%abs._if_then:
    $_virtual_register = move $c
    $returnVal = move $_virtual_register
    jump %abs.exit
%abs.exit:
    ret $returnVal
%abs._if_merge:
    $_virtual_register_2 = neg $c
    $_virtual_register_3 = move $_virtual_register_2
    $returnVal = move $_virtual_register_3
    jump %abs.exit
%abs.entry:
    $_virtual_register_4 = sgt $c 0
    br $_virtual_register_4 %abs._if_then %abs._if_merge
}

func main {
%main._for_step:
    $_virtual_register = move @i
    @i = add @i 1
    jump %main._for_cond
%main._for_merge:
    jump %main._for_step
%main._if_then:
    @r = move @i
    @c = move @j
    jump %main._if_merge
%main._for_step_2:
    $_virtual_register_2 = move @j
    @j = add @j 1
    jump %main._for_cond_2
%main._if_merge:
    jump %main._for_step_2
%main._for_body:
    $_virtual_register_3 = call getInt 
    @n = move $_virtual_register_3
    $_virtual_register_4 = seq @n 1
    br $_virtual_register_4 %main._if_then %main._if_merge
%main._for_cond_2:
    $_virtual_register_5 = slt @j 5
    br $_virtual_register_5 %main._for_body %main._for_merge
%main._for_body_2:
    @j = move 0
    jump %main._for_cond_2
%main._for_merge_2:
    $_virtual_register_6 = sub 2 @r
    $_virtual_register_7 = call abs $c_2 
    $_virtual_register_8 = sub 2 @c
    $_virtual_register_9 = call abs $c_2 
    $_virtual_register_10 = add $_virtual_register_7 $_virtual_register_9
    call printInt 
    $_virtual_register_11 = move 0
    ret $_virtual_register_11
%main._for_cond:
    $_virtual_register_12 = slt @i 5
    br $_virtual_register_12 %main._for_body_2 %main._for_merge_2
%main.entry:
    @i = move 0
    jump %main._for_cond
}

func _init_ {
%_init_.entry:
    $_virtual_register = call main 
    $_virtual_register_2 = move $_virtual_register
    ret $_virtual_register_2
}

