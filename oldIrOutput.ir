
func qpow $a $p $mod {
%qpow_entry:
    $t = move 1
    $y = move $a
    jump %qpow__while_cond
%qpow__while_cond:
    $_virtual_register = sgt $p 0
    br $_virtual_register %qpow__while_body %qpow__while_merge
%qpow__while_body:
    $_virtual_register_2 = and $p 1
    $_virtual_register_3 = seq $_virtual_register_2 1
    br $_virtual_register_3 %qpow__if_then %qpow__if_merge
%qpow__if_then:
    $_virtual_register_4 = mul $t $y
    $_virtual_register_5 = mod $_virtual_register_4 $mod
    $t = move $_virtual_register_5
    jump %qpow__if_merge
%qpow__if_merge:
    $_virtual_register_6 = mul $y $y
    $_virtual_register_7 = mod $_virtual_register_6 $mod
    $y = move $_virtual_register_7
    $_virtual_register_8 = div $p 2
    $p = move $_virtual_register_8
    jump %qpow__while_cond
%qpow__while_merge:
    $_virtual_register_9 = move $t
    ret $_virtual_register_9
}

func main {
%main_entry:
    $_virtual_register_10 = call qpow 2 10 10000 
    $_virtual_register_11 = call toString $_virtual_register_10 
    call println $_virtual_register_11 
    $_virtual_register_12 = move 0
    ret $_virtual_register_12
}

func _init_ {
%_init__entry:
    $_virtual_register_13 = call main 
    $_virtual_register_14 = move $_virtual_register_13
    ret $_virtual_register_14
}

